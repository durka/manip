function plot_points(X, S)
    colors = 'bgrk';

    % plot the first frame
    h = zeros(2, length(S));
    clf;
    hold on;
        for j = 1:length(S)
            if size(X,3) == 3
                % 2D
                hold on;
                h(1,j) = plot([X(1,S(j).a, 1,3), X(1,S(j).b, 1,3)], ...
                              [X(1,S(j).a, 2,3), X(1,S(j).b, 2,3)], ...
                              [colors(j) '.-']);
                h(2,j) = quiver([X(1,S(j).a, 1,3), X(1,S(j).b, 1,3)], ...
                                [X(1,S(j).a, 2,3), X(1,S(j).b, 2,3)], ...
                                [X(1,S(j).a, 1,1), X(1,S(j).b, 1,1)], ...
                                [X(1,S(j).a, 2,1), X(1,S(j).b, 2,1)], ...
                                0.2, colors(j));
                hold off;
            else
                % 3D
                hold on;
                h(1,j) = plot3([X(1,S(j).a, 1,4), X(1,S(j).b, 1,4)], ...
                               [X(1,S(j).a, 2,4), X(1,S(j).b, 2,4)], ...
                               [X(1,S(j).a, 3,4), X(1,S(j).b, 3,4)], ...
                               [colors(j) '.-']);
                h(2,j) = quiver3([X(1,S(j).a, 1,4), X(1,S(j).b, 1,4)], ...
                                 [X(1,S(j).a, 2,4), X(1,S(j).b, 2,4)], ...
                                 [X(1,S(j).a, 3,4), X(1,S(j).b, 3,4)], ...
                                 [X(1,S(j).a, 1,1), X(1,S(j).b, 1,1)], ...
                                 [X(1,S(j).a, 2,1), X(1,S(j).b, 2,1)], ...
                                 [X(1,S(j).a, 3,1), X(1,S(j).b, 3,1)], ...
                                 0.2, colors(j));
                hold off;
            end
        end
    hold off;
    axis(repmat([-5 5], 1, size(X,3)-1));
    
    % add slider
    function go(f)
        for j = 1:length(S)
            if size(X,3) == 3
                % 2D
                set(h(1,j), 'XData',[X(f,S(j).a, 1,3), X(f,S(j).b, 1,3)], ...
                            'YData',[X(f,S(j).a, 2,3), X(f,S(j).b, 2,3)]);
                set(h(2,j), 'XData',[X(f,S(j).a, 1,3), X(f,S(j).b, 1,3)], ...
                            'YData',[X(f,S(j).a, 2,3), X(f,S(j).b, 2,3)], ...
                            'UData',[X(f,S(j).a, 1,1), X(f,S(j).b, 1,1)], ...
                            'VData',[X(f,S(j).a, 2,1), X(f,S(j).b, 2,1)]);
            else
                % 3D
                set(h(1,j), 'XData',[X(f,S(j).a, 1,4), X(f,S(j).b, 1,4)], ...
                            'YData',[X(f,S(j).a, 2,4), X(f,S(j).b, 2,4)], ...
                            'ZData',[X(f,S(j).a, 3,4), X(f,S(j).b, 3,4)]);
                set(h(2,j), 'XData',[X(f,S(j).a, 1,4), X(f,S(j).b, 1,4)], ...
                            'YData',[X(f,S(j).a, 2,4), X(f,S(j).b, 2,4)], ...
                            'ZData',[X(f,S(j).a, 3,4), X(f,S(j).b, 3,4)], ...
                            'UData',[X(f,S(j).a, 1,1), X(f,S(j).b, 1,1)], ...
                            'VData',[X(f,S(j).a, 2,1), X(f,S(j).b, 2,1)], ...
                            'WData',[X(f,S(j).a, 3,1), X(f,S(j).b, 3,1)]);
            end
        end
        drawnow;
    end
    pos = get(gca, 'position');
    pos(2) = pos(2) - 0.1;
    pos(4) = 0.05;
    s = uicontrol('style', 'listbox', ...
                  'units', 'normalized', ...
                  'position', pos, ...
                  'callback', @(varargin) go(round(get(gcbo, 'value'))), ...
                  'min', 1, 'max', size(X, 1), ...
                  'value', 1, ...
                  'string', cellfun(@num2str, num2cell(1:size(X, 1)), 'UniformOutput',false));
    set(s, 'selected', 'on');

end
