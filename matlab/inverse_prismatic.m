% in 2D and 3D
%   params{1} SE(n) is the offset from the from-object center to prismatic joint
%   params{2} R(n)  is the unit vector pointing in the direction of prismaticness
%   state     R     is the extension of the joint
function state = inverse_prismatic(x, params)
    offset = params{1};
    u = params{2};
    d = length(u);
    
    if d == 3
        state = - (u(1)*(x(1,1)*offset(1,2)*offset(2,3)*offset(3,4) - x(1,1)*offset(1,2)*offset(2,4)*offset(3,3) - x(1,1)*offset(1,3)*offset(2,2)*offset(3,4) + x(1,1)*offset(1,3)*offset(2,4)*offset(3,2) + x(1,1)*offset(1,4)*offset(2,2)*offset(3,3) - x(1,1)*offset(1,4)*offset(2,3)*offset(3,2) - x(1,2)*offset(1,1)*offset(2,3)*offset(3,4) + x(1,2)*offset(1,1)*offset(2,4)*offset(3,3) + x(1,2)*offset(1,3)*offset(2,1)*offset(3,4) - x(1,2)*offset(1,3)*offset(2,4)*offset(3,1) - x(1,2)*offset(1,4)*offset(2,1)*offset(3,3) + x(1,2)*offset(1,4)*offset(2,3)*offset(3,1) + x(1,3)*offset(1,1)*offset(2,2)*offset(3,4) - x(1,3)*offset(1,1)*offset(2,4)*offset(3,2) - x(1,3)*offset(1,2)*offset(2,1)*offset(3,4) + x(1,3)*offset(1,2)*offset(2,4)*offset(3,1) + x(1,3)*offset(1,4)*offset(2,1)*offset(3,2) - x(1,3)*offset(1,4)*offset(2,2)*offset(3,1) - x(1,4)*offset(1,1)*offset(2,2)*offset(3,3) + x(1,4)*offset(1,1)*offset(2,3)*offset(3,2) + x(1,4)*offset(1,2)*offset(2,1)*offset(3,3) - x(1,4)*offset(1,2)*offset(2,3)*offset(3,1) - x(1,4)*offset(1,3)*offset(2,1)*offset(3,2) + x(1,4)*offset(1,3)*offset(2,2)*offset(3,1)))/(offset(1,1)*offset(2,2)*offset(3,3) - offset(1,1)*offset(2,3)*offset(3,2) - offset(1,2)*offset(2,1)*offset(3,3) + offset(1,2)*offset(2,3)*offset(3,1) + offset(1,3)*offset(2,1)*offset(3,2) - offset(1,3)*offset(2,2)*offset(3,1)) - (u(2)*(x(2,1)*offset(1,2)*offset(2,3)*offset(3,4) - x(2,1)*offset(1,2)*offset(2,4)*offset(3,3) - x(2,1)*offset(1,3)*offset(2,2)*offset(3,4) + x(2,1)*offset(1,3)*offset(2,4)*offset(3,2) + x(2,1)*offset(1,4)*offset(2,2)*offset(3,3) - x(2,1)*offset(1,4)*offset(2,3)*offset(3,2) - x(2,2)*offset(1,1)*offset(2,3)*offset(3,4) + x(2,2)*offset(1,1)*offset(2,4)*offset(3,3) + x(2,2)*offset(1,3)*offset(2,1)*offset(3,4) - x(2,2)*offset(1,3)*offset(2,4)*offset(3,1) - x(2,2)*offset(1,4)*offset(2,1)*offset(3,3) + x(2,2)*offset(1,4)*offset(2,3)*offset(3,1) + x(2,3)*offset(1,1)*offset(2,2)*offset(3,4) - x(2,3)*offset(1,1)*offset(2,4)*offset(3,2) - x(2,3)*offset(1,2)*offset(2,1)*offset(3,4) + x(2,3)*offset(1,2)*offset(2,4)*offset(3,1) + x(2,3)*offset(1,4)*offset(2,1)*offset(3,2) - x(2,3)*offset(1,4)*offset(2,2)*offset(3,1) - x(2,4)*offset(1,1)*offset(2,2)*offset(3,3) + x(2,4)*offset(1,1)*offset(2,3)*offset(3,2) + x(2,4)*offset(1,2)*offset(2,1)*offset(3,3) - x(2,4)*offset(1,2)*offset(2,3)*offset(3,1) - x(2,4)*offset(1,3)*offset(2,1)*offset(3,2) + x(2,4)*offset(1,3)*offset(2,2)*offset(3,1)))/(offset(1,1)*offset(2,2)*offset(3,3) - offset(1,1)*offset(2,3)*offset(3,2) - offset(1,2)*offset(2,1)*offset(3,3) + offset(1,2)*offset(2,3)*offset(3,1) + offset(1,3)*offset(2,1)*offset(3,2) - offset(1,3)*offset(2,2)*offset(3,1)) - (u(3)*(x(3,1)*offset(1,2)*offset(2,3)*offset(3,4) - x(3,1)*offset(1,2)*offset(2,4)*offset(3,3) - x(3,1)*offset(1,3)*offset(2,2)*offset(3,4) + x(3,1)*offset(1,3)*offset(2,4)*offset(3,2) + x(3,1)*offset(1,4)*offset(2,2)*offset(3,3) - x(3,1)*offset(1,4)*offset(2,3)*offset(3,2) - x(3,2)*offset(1,1)*offset(2,3)*offset(3,4) + x(3,2)*offset(1,1)*offset(2,4)*offset(3,3) + x(3,2)*offset(1,3)*offset(2,1)*offset(3,4) - x(3,2)*offset(1,3)*offset(2,4)*offset(3,1) - x(3,2)*offset(1,4)*offset(2,1)*offset(3,3) + x(3,2)*offset(1,4)*offset(2,3)*offset(3,1) + x(3,3)*offset(1,1)*offset(2,2)*offset(3,4) - x(3,3)*offset(1,1)*offset(2,4)*offset(3,2) - x(3,3)*offset(1,2)*offset(2,1)*offset(3,4) + x(3,3)*offset(1,2)*offset(2,4)*offset(3,1) + x(3,3)*offset(1,4)*offset(2,1)*offset(3,2) - x(3,3)*offset(1,4)*offset(2,2)*offset(3,1) - x(3,4)*offset(1,1)*offset(2,2)*offset(3,3) + x(3,4)*offset(1,1)*offset(2,3)*offset(3,2) + x(3,4)*offset(1,2)*offset(2,1)*offset(3,3) - x(3,4)*offset(1,2)*offset(2,3)*offset(3,1) - x(3,4)*offset(1,3)*offset(2,1)*offset(3,2) + x(3,4)*offset(1,3)*offset(2,2)*offset(3,1)))/(offset(1,1)*offset(2,2)*offset(3,3) - offset(1,1)*offset(2,3)*offset(3,2) - offset(1,2)*offset(2,1)*offset(3,3) + offset(1,2)*offset(2,3)*offset(3,1) + offset(1,3)*offset(2,1)*offset(3,2) - offset(1,3)*offset(2,2)*offset(3,1));
    else
        state = - u(1)*((x(1,2)*offset(2,3) - x(1,3)*offset(2,2))/offset(2,2) - ((x(1,1)*offset(2,2) - x(1,2)*offset(2,1))*(offset(1,2)*offset(2,3) - offset(1,3)*offset(2,2)))/(offset(2,2)*(offset(1,1)*offset(2,2) - offset(1,2)*offset(2,1)))) - u(2)*((x(2,2)*offset(2,3) - x(2,3)*offset(2,2))/offset(2,2) - ((x(2,1)*offset(2,2) - x(2,2)*offset(2,1))*(offset(1,2)*offset(2,3) - offset(1,3)*offset(2,2)))/(offset(2,2)*(offset(1,1)*offset(2,2) - offset(1,2)*offset(2,1))));
    end
    %state = dot(subsref(x/offset, struct('type','()', 'subs',{{1:d,d+1}})), u);
end